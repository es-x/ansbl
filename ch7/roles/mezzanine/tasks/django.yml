- name: install epel
  yum: name=epel-release state=latest update_cache=yes
  become: True
      
- name: create project path
  file: path={{ mezzanine_proj_path }} state=directory

- name: create a logs directory
  file:
    path: "{{ ansible_env.HOME }}/logs"
    state: directory

- name: check out the repository on the host
  git: repo={{ mezzanine_repo_url }} dest={{ mezzanine_proj_path }} accept_hostkey=yes

- name: install python requirements globally via pip
  pip: name={{ item }} state=latest
  with_items:
    - pip
    - virtualenv
    - virtualenvwrapper
  become: True

- name: generate the settings file
  template: src=local_settings.py.j2 dest={{ mezzanine_settings_path }}/local_settings.py

- name: install requirements.txt
  pip: requirements={{ mezzanine_proj_path }}/{{ mezzanine_reqs_path }} virtualenv={{ mezzanine_venv_path }}
    
- name: install required python packages
  pip: name={{ item }} virtualenv={{ mezzanine_venv_path }}
  with_items:
    - gunicorn
    - setproctitle
    - psycopg2-binary
    - django-compressor
    - python-memcached

- name: apply migrations to create the database, collect static content
  django_manage:
    command: "{{ item }}"
    app_path: "{{ mezzanine_proj_path }}"
    virtualenv: "{{ mezzanine_venv_path }}"
  with_items:
    - migrate
    - collectstatic
      
- name: set the site id
  script: scripts/setsite.py
  environment:
    PATH: "{{ mezzanine_venv_path }}/bin"
    PROJECT_DIR: "{{ mezzanine_proj_path }}"
    PROJECT_APP: "{{ mezzanine_proj_app }}"
    WEBSITE_DOMAIN: "{{ live_hostname }}"

- name: set the admin password
  script: scripts/setadmin.py
  environment:
    PATH: "{{ mezzanine_venv_path }}/bin"
    PROJECT_DIR: "{{ mezzanine_proj_path }}"
    PROJECT_APP: "{{ mezzanine_proj_app }}"
    ADMIN_PASSWORD: "{{ admin_pass }}"